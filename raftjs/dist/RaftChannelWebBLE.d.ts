import RaftChannel from "./RaftChannel";
import { RaftConnEventFn } from "./RaftConnEvents";
import RaftMsgHandler from "./RaftMsgHandler";
import { ConnectorOptions } from "./RaftSystemType";
export default class RaftChannelWebBLE implements RaftChannel {
    static ServiceUUID: string;
    static CmdUUID: string;
    static RespUUID: string;
    private _bleDevice;
    private _characteristicTx;
    private _characteristicRx;
    private _raftMsgHandler;
    private _onConnEvent;
    private _msgTxTimeLast;
    private _msgTxMinTimeBetweenMs;
    private readonly maxRetries;
    private _isConnected;
    private readonly _maxConnRetries;
    private _eventListenerFn;
    private _requestedBatchAckSize;
    private _requestedFileBlockSize;
    fhBatchAckSize(): number;
    fhFileBlockSize(): number;
    setMsgHandler(raftMsgHandler: RaftMsgHandler): void;
    requiresSubscription(): boolean;
    ricRestCmdBeforeDisconnect(): string | null;
    isEnabled(): boolean;
    isConnected(): boolean;
    setOnConnEvent(connEventFn: RaftConnEventFn): void;
    onDisconnected(event: Event): void;
    getConnectedLocator(): string | object;
    connect(locator: string | object, _connectorOptions: ConnectorOptions): Promise<boolean>;
    disconnect(): Promise<void>;
    pauseConnection(pause: boolean): void;
    _onMsgRx(event: Event): void;
    sendTxMsg(msg: Uint8Array): Promise<boolean>;
    sendTxMsgNoAwait(msg: Uint8Array): Promise<boolean>;
}
